---
title: Week 8 practice
format: live-html
engine: knitr
webr:
  packages:
    - wordcloud
    - tm
---
## Text analytics

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}

In **Week 8 Workshop** we are using text analytics and classification models to predict whether YouTube comments are HAM or SPAM.

## What is random?

A very simple way of analysing text is to count occurances of words.
We see word clouds a lot!
How useful are they?

::: {.callout-tip title="Load in your 'corpus' or document" collapse="true"}
```{webr}
text <- c("Summative Assessment: Assignment 1 Deadline: 
14 March 2025 Time: 15:00 hours
Materials Provided. 

In this assignment, you will apply and evaluate a random forest model to a 
dataset containing information from a mailing campaign. Your task is to 
develop a classification model to identify individuals most likely to donate 
to the campaign, based on the features provided in the data. You will assess 
the model's performance, evaluate its fit, and analyse how different features 
contribute to its predictive accuracy.

    You will be provided with a video stepping through a random forest in R, 
    which is applied to a different dataset.
    You will be provided with the mailing campaign dataset and an RMarkdown 
    file to work with and adapt the code provided in the video.

Objectives
On completion of this assessment, you will:

    Derive and evaluate information toward a specific challenge
    Use data visualisation to share content and insight
    Interpret and understand the potential implications of your analysis

Instructions

    Log into ELE, navigate to the Assessments tile. 
    Watch the Summative Assessment video
    Download the folder containing your data and RMarkdown file.
    Recreate the code from the video using your own dataset. I encourage you 
    to work in groups of 2-3 for this if you are inexperienced with coding.  
    Ideally, you need to get all of the code running.
    Spend some time interpreting the outputs of your code.
    Interpret and consider the possible implications of the outcomes.  Your 
    analysis needs to be individual work.
    Complete the RMarkdown file with your individual interpretations, and knit 
    it to pdf and/or html to produce a fully rendered report. You will submit 
    a single rendered report via ELE.

Advice for success

    Participate actively in all workshop sessions, and try to understand what 
    the code is doing and why. Attend lectures, engage with materials on ELE.
    Work effectively with your peers to debug and troubleshoot code
    Ensure your rendered report is clear, organised, and proof-read.
    Talk to the module convenor if you feel stuck.")
```
:::

```{webr}
# Create a text corpus
corpus <- Corpus(VectorSource(text))

# Preprocess the text: remove punctuation, numbers, whitespace, and convert to lowercase
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, stripWhitespace)

# Create a term-document matrix
tdm <- TermDocumentMatrix(corpus)

# Convert the matrix to a data frame
m <- as.matrix(tdm)
word_freqs <- sort(rowSums(m), decreasing = TRUE) 
df <- data.frame(word = names(word_freqs), freq = word_freqs)

# Plot the word cloud
wordcloud(words = df$word, freq = df$freq, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, "Dark2"),
          scale = c(7,0.5))

```

